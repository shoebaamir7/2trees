<?php

/**
 * Implements hook_menu().
 */
function spy_glass_menu() {
    $item = array();
    $item['node/%node/spy_glass'] = [
        'title' => 'Spy Glass',
        'description' => 'Take a closer look',
        'page callback' => 'spy_glass_page',
        'page arguments' => array(1),
        'access callback' => 'node_access',
        'access arguments' => array('view', 1),
        'type' => MENU_LOCAL_TASK
    ];

  return $item;
}

/**
 * Implements hook_theme().
 */
function spy_glass_theme($existing, $type, $theme, $path) {
    return [
        'spy_glass_item' => [
            'arguments' => ['title' => NULL, 'data' => NULL],
            'template' => 'spy-glass-item'
        ]
    ];
  /*return [
    'spy_glass_item' => [
      'variables' => ['item' => NULL]
    ]
  ];*/
}

function spy_glass_preprocess_spy_glass_item(&$variables) {
    $variables['title'] = check_plain($variables['title']);
    $variables['data'] = check_plain($variables['data']);
    $variables['test'] = t('test');
}

/*function theme_spy_glass_item($variables) {
  $output = '';
  $output .= '<p>';
  $output .= '<strong>' . $variables['title'] . '</strong><br>';
  $output .= $variables['data'];
  $output .= '</p>';

  return $output;
}*/

function spy_glass_page($node)
{
    $information = _spy_glass_serious_spying_business($node);
    $content = [];
    foreach ($information as $item) {
      $content[] = [
        '#type' => 'markup',
        '#markup' => theme('spy_glass_item',$item)
      ];
    }

    return $content;
}

/**
 * Collecting some super secret information about this node.
 */
function _spy_glass_serious_spying_business($node) {
    $information = array();
    $information[] = array(
      'title' => t('Title Character Count'),
      'data' => t('There are @num characters in the $node->title.', array('@num' => strlen($node->title))),
    );
    $seconds = $node->changed - $node->created;
    $information[] = array(
      'title' => t('Timestamp Differences'),
      'data' => t('The $node->changed timestamp is @seconds different from the $node->created timestamp.', array('@seconds' => $seconds)),
    );
    if ($node->translate == 0) {
      $information[] = array(
        'title' => t('Translated?'),
        'data' => t('This node is NOT translated into pirate speak, hope you know English.'),
      );
    }
    $information[] = array(
      'title' => t('Hash'),
      'data' => md5($node->title),
    );
    // Example of potential user input data that needs to be sanitized.
    // Instead of hard-coding this, it could be getting loaded from the db
    // where a user has entered the info.
    $information[] = array(
      'title' => t('Nefarious data'),
      'data' => '<a href="#" onclick="alert(\'Pwned!\'); return false;">click me</a>',
    );
    return $information;
  }
